pipeline {
    
    agent any
    
    environment {
        dockerImage =''
        registry = 'mail2dwarak/simplilearn-project1'
        registryCredential = 'dockerhub_id'
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/DwarakRep/simplilearn-project1/']]])
            }
        }
        
        stage("Build docker image") {
            steps {
                script {
                    dockerImage = docker.build registry
                }
            }
        }
        
        stage('Uploading Docker Image') {
            steps {
                script {
                        docker.withRegistry('', registryCredential ) {
                        dockerImage.push()
                        }    
                }
            }
        }
        
      // Stopping Docker containers for cleaner Docker run
     stage('docker stop container') {
         steps {
            sh 'docker ps -f name=mypythonappContainer -q | xargs --no-run-if-empty docker container stop'
            sh 'docker container ls -a -fname=mypythonappContainer -q | xargs -r docker container rm'
         }
       }
    
    
    // Running Docker container, make sure port 8096 is opened in 
    stage('Docker Run') {
     steps{
         script {
            dockerImage.run("-p 8096:5000 --rm --name mypythonappContainer")
         }
      }
    }
        
    }
}
